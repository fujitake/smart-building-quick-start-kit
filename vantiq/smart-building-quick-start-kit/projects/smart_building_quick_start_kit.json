{
  "ars_relationships" : [ ],
  "links" : [ {
    "source" : "procedure/LogUtils.logError",
    "target" : "procedure/LogUtils.logCommon"
  }, {
    "source" : "procedure/LogUtils.logWarn",
    "target" : "procedure/LogUtils.logCommon"
  }, {
    "source" : "procedure/LogUtils.logInfo",
    "target" : "procedure/LogUtils.logCommon"
  }, {
    "source" : "procedure/PublishUtils.publishLog",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/PublishUtils.publishLog",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/PublishUtils.publishNotification",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/PublishUtils.publishNotification",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/PublishUtils.publishProcessedData",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/PublishUtils.publishProcessedData",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/LogUtils.logCommon",
    "target" : "procedure/PublishUtils.publishLog"
  }, {
    "source" : "procedure/PublishUtils.publishLog",
    "target" : "source/LogMqtt"
  }, {
    "source" : "procedure/PublishUtils.publishNotification",
    "target" : "source/NotificationMqtt"
  }, {
    "source" : "source/EnvMqtt",
    "target" : "app/EnvEventHandler"
  }, {
    "source" : "source/LidarInoutMqtt",
    "target" : "app/LidarEventHandler"
  }, {
    "source" : "source/LidarPositionMqtt",
    "target" : "app/LidarEventHandler"
  }, {
    "source" : "source/CameraIntrusionMqtt",
    "target" : "app/CameraEventHandler"
  }, {
    "source" : "source/CameraPeopleCountMqtt",
    "target" : "app/CameraEventHandler"
  }, {
    "source" : "source/CameraRegistrantMqtt",
    "target" : "app/CameraEventHandler"
  }, {
    "source" : "source/AnalogBoilerStatusMqtt",
    "target" : "app/AnalogMeterEventHandler"
  }, {
    "source" : "source/AnalogGasMqtt",
    "target" : "app/AnalogMeterEventHandler"
  }, {
    "source" : "source/AnalogVoltMqtt",
    "target" : "app/AnalogMeterEventHandler"
  }, {
    "source" : "procedure/EnvSensor.transformEnvEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/EnvSensor.transformEnvEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "app/EnvEventHandler",
    "target" : "procedure/EnvSensor.transformEnvEvent"
  }, {
    "source" : "source/AnalogTemperatureMqtt",
    "target" : "app/AnalogMeterEventHandler"
  }, {
    "source" : "services/LogUtils",
    "target" : "procedure/LogUtils.logCommon"
  }, {
    "source" : "services/LogUtils",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "services/LogUtils",
    "target" : "procedure/LogUtils.logWarn"
  }, {
    "source" : "services/LogUtils",
    "target" : "procedure/LogUtils.logInfo"
  }, {
    "source" : "services/LogUtils",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "services/PublishUtils",
    "target" : "procedure/PublishUtils.publishLog"
  }, {
    "source" : "services/PublishUtils",
    "target" : "procedure/PublishUtils.publishNotification"
  }, {
    "source" : "services/PublishUtils",
    "target" : "procedure/PublishUtils.publishProcessedData"
  }, {
    "source" : "procedure/LogUtils.logError",
    "target" : "services/LogUtils"
  }, {
    "source" : "procedure/PublishUtils.publishNotification",
    "target" : "services/PublishUtils"
  }, {
    "source" : "procedure/LogUtils.logCommon",
    "target" : "services/LogUtils"
  }, {
    "source" : "procedure/TemperatureMeter.transformTempEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/TemperatureMeter.transformTempEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/TemperatureMeter.transformTempEvent",
    "target" : "services/TemperatureMeter"
  }, {
    "source" : "services/TemperatureMeter",
    "target" : "procedure/TemperatureMeter.transformTempEvent"
  }, {
    "source" : "procedure/PublishUtils.publishProcessedData",
    "target" : "services/PublishUtils"
  }, {
    "source" : "procedure/LogUtils.logInfo",
    "target" : "services/LogUtils"
  }, {
    "source" : "procedure/LogUtils.logWarn",
    "target" : "services/LogUtils"
  }, {
    "source" : "procedure/PublishUtils.publishLog",
    "target" : "services/PublishUtils"
  }, {
    "source" : "procedure/LogUtils.getMessageFormat",
    "target" : "services/LogUtils"
  }, {
    "source" : "procedure/TemperatureMeter.transformTempEvent",
    "target" : "type/temperature_meters"
  }, {
    "source" : "app/EnvEventHandler",
    "target" : "services/EnvSensor"
  }, {
    "source" : "app/EnvEventHandler",
    "target" : "services/apps.services.EnvEventHandler"
  }, {
    "source" : "services/apps.services.EnvEventHandler",
    "target" : "app/EnvEventHandler"
  }, {
    "source" : "procedure/EnvSensor.transformEnvEvent",
    "target" : "type/env_sensors"
  }, {
    "source" : "procedure/EnvSensor.transformEnvEvent",
    "target" : "services/EnvSensor"
  }, {
    "source" : "services/EnvSensor",
    "target" : "procedure/EnvSensor.transformEnvEvent"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "type/temperature_meter_status"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/TemperatureMeter.transformTempEvent"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "services/TemperatureMeter"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "services/apps.services.AnalogMeterEventHandler"
  }, {
    "source" : "services/apps.services.AnalogMeterEventHandler",
    "target" : "app/AnalogMeterEventHandler"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetTempTopic",
    "target" : "type/temperature_meter_status"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/apps.AnalogMeterEventHandler.SetTempTopic"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetTempTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "services/BoilerStatusIndicator",
    "target" : "procedure/BoilerStatusIndicator.transformStatusEvent"
  }, {
    "source" : "procedure/BoilerStatusIndicator.transformStatusEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/BoilerStatusIndicator.transformStatusEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/BoilerStatusIndicator.transformStatusEvent",
    "target" : "services/BoilerStatusIndicator"
  }, {
    "source" : "procedure/BoilerStatusIndicator.transformStatusEvent",
    "target" : "type/boiler_status_indicators"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "type/boiler_status_indicator_status"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/BoilerStatusIndicator.transformStatusEvent"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/apps.AnalogMeterEventHandler.SetBoilerStatusTopic"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "services/BoilerStatusIndicator"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetBoilerStatusTopic",
    "target" : "type/boiler_status_indicator_status"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetBoilerStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/GasMeter.transformGasEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/GasMeter.transformGasEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/GasMeter.transformGasEvent",
    "target" : "services/GasMeter"
  }, {
    "source" : "services/GasMeter",
    "target" : "procedure/GasMeter.transformGasEvent"
  }, {
    "source" : "procedure/GasMeter.transformGasEvent",
    "target" : "type/gas_meters"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "type/gas_meter_status"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/GasMeter.transformGasEvent"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/apps.AnalogMeterEventHandler.SetGasStatusTopic"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "services/GasMeter"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetGasStatusTopic",
    "target" : "type/gas_meter_status"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetGasStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/VoltMeter.transformVoltEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/VoltMeter.transformVoltEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/VoltMeter.transformVoltEvent",
    "target" : "services/VoltMeter"
  }, {
    "source" : "services/VoltMeter",
    "target" : "procedure/VoltMeter.transformVoltEvent"
  }, {
    "source" : "procedure/VoltMeter.transformVoltEvent",
    "target" : "type/volt_meters"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/VoltMeter.transformVoltEvent"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "services/VoltMeter"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "type/volt_meter_status"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/apps.AnalogMeterEventHandler.SetVoltStatusTopic"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetVoltStatusTopic",
    "target" : "type/volt_meter_status"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetVoltStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetNotifyBoilerAbnormalityTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/PublishUtils.publishProcessedData"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "services/PublishUtils"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/PublishUtils.publishNotification"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetNotifyAbnormalBoilerTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/AnalogMeterEventHandler",
    "target" : "procedure/apps.AnalogMeterEventHandler.SetAbnormalBoilerTopic"
  }, {
    "source" : "procedure/apps.AnalogMeterEventHandler.SetAbnormalBoilerTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.EnvEventHandler.SetAreaStatusTopic",
    "target" : "type/area_status"
  }, {
    "source" : "procedure/apps.EnvEventHandler.SetAreaStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.EnvEventHandler.SetNotifyHighCo2Topic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/IntrusionDetectionCamera.transformIntrusionEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/IntrusionDetectionCamera.transformIntrusionEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/IntrusionDetectionCamera.transformIntrusionEvent",
    "target" : "type/intrusion_detection_cameras"
  }, {
    "source" : "procedure/IntrusionDetectionCamera.transformIntrusionEvent",
    "target" : "services/IntrusionDetectionCamera"
  }, {
    "source" : "services/IntrusionDetectionCamera",
    "target" : "procedure/IntrusionDetectionCamera.transformIntrusionEvent"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "type/intrusion_detection_camera_status"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/IntrusionDetectionCamera.transformIntrusionEvent"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "services/IntrusionDetectionCamera"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "services/apps.services.CameraEventHandler"
  }, {
    "source" : "services/apps.services.CameraEventHandler",
    "target" : "app/CameraEventHandler"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/PublishUtils.publishNotification"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/apps.CameraEventHandler.SetIntrusionTopic"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "services/PublishUtils"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetIntrusionTopic",
    "target" : "type/intrusion_detection_camera_status"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetIntrusionTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/PeopleCountingCamera.transformPeopleCountEvent"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "services/PeopleCountingCamera"
  }, {
    "source" : "procedure/PeopleCountingCamera.transformPeopleCountEvent",
    "target" : "type/people_counting_cameras"
  }, {
    "source" : "procedure/PeopleCountingCamera.transformPeopleCountEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/PeopleCountingCamera.transformPeopleCountEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/PeopleCountingCamera.transformPeopleCountEvent",
    "target" : "services/PeopleCountingCamera"
  }, {
    "source" : "services/PeopleCountingCamera",
    "target" : "procedure/PeopleCountingCamera.transformPeopleCountEvent"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetAreaStatusTopic",
    "target" : "type/area_status"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetAreaStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetHighCongestionTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.EnvEventHandler.SetHighCo2Topic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/apps.EnvEventHandler.SetEnvAreaStatusTopic",
    "target" : "type/area_status"
  }, {
    "source" : "procedure/apps.EnvEventHandler.SetEnvAreaStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "type/area_status"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "procedure/conf"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "procedure/PublishUtils.publishProcessedData"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "procedure/PublishUtils.publishNotification"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "services/PublishUtils"
  }, {
    "source" : "topic//internal/area_status",
    "target" : "app/AreaStatusHandler"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "topic//internal/area_status"
  }, {
    "source" : "procedure/apps.AreaStatusHandler.SetHighCongestionTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "procedure/apps.AreaStatusHandler.SetAreaStatusTopic"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "procedure/apps.AreaStatusHandler.SetHighCongestionTopic"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "services/apps.services.AreaStatusHandler"
  }, {
    "source" : "services/apps.services.AreaStatusHandler",
    "target" : "app/AreaStatusHandler"
  }, {
    "source" : "procedure/apps.AreaStatusHandler.SetAreaStatusTopic",
    "target" : "type/area_status"
  }, {
    "source" : "procedure/apps.AreaStatusHandler.SetAreaStatusTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/AreaStatusHandler",
    "target" : "procedure/apps.AreaStatusHandler.SetHighCo2Topic"
  }, {
    "source" : "procedure/apps.AreaStatusHandler.SetHighCo2Topic",
    "target" : "procedure/conf"
  }, {
    "source" : "app/EnvEventHandler",
    "target" : "topic//internal/area_status"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "type/registrant_detection_camera_status"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/RegistrantDetectionCamera.transformRegistrantEvent"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/RegistrantDetectionCamera.findRegistrant"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/apps.CameraEventHandler.SetRegistrantTopic"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "services/RegistrantDetectionCamera"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.findRegistrant",
    "target" : "type/registrants"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.findRegistrant",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.findRegistrant",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.findRegistrant",
    "target" : "services/RegistrantDetectionCamera"
  }, {
    "source" : "services/RegistrantDetectionCamera",
    "target" : "procedure/RegistrantDetectionCamera.findRegistrant"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.transformRegistrantEvent",
    "target" : "type/registrant_detection_cameras"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.transformRegistrantEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.transformRegistrantEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/RegistrantDetectionCamera.transformRegistrantEvent",
    "target" : "services/RegistrantDetectionCamera"
  }, {
    "source" : "services/RegistrantDetectionCamera",
    "target" : "procedure/RegistrantDetectionCamera.transformRegistrantEvent"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetRegistrantTopic",
    "target" : "type/registrant_detection_camera_status"
  }, {
    "source" : "procedure/apps.CameraEventHandler.SetRegistrantTopic",
    "target" : "procedure/conf"
  }, {
    "source" : "procedure/PeopleCountingCamera.countTotalPeople",
    "target" : "type/area_status"
  }, {
    "source" : "app/LidarEventHandler",
    "target" : "procedure/Lidar.transformPositionEvent"
  }, {
    "source" : "app/LidarEventHandler",
    "target" : "services/apps.services.LidarEventHandler"
  }, {
    "source" : "services/apps.services.LidarEventHandler",
    "target" : "app/LidarEventHandler"
  }, {
    "source" : "app/LidarEventHandler",
    "target" : "services/Lidar"
  }, {
    "source" : "app/LidarEventHandler",
    "target" : "topic//internal/area_status"
  }, {
    "source" : "services/PeopleCountingCamera",
    "target" : "procedure/PeopleCountingCamera.countTotalPeople"
  }, {
    "source" : "procedure/PeopleCountingCamera.countTotalPeople",
    "target" : "services/PeopleCountingCamera"
  }, {
    "source" : "app/CameraEventHandler",
    "target" : "procedure/PeopleCountingCamera.countTotalPeople"
  }, {
    "source" : "procedure/Lidar.transformPositionEvent",
    "target" : "type/lidar_position_sensors"
  }, {
    "source" : "procedure/Lidar.transformPositionEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/Lidar.transformPositionEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/Lidar.transformPositionEvent",
    "target" : "services/Lidar"
  }, {
    "source" : "services/Lidar",
    "target" : "procedure/Lidar.transformPositionEvent"
  }, {
    "source" : "services/PeopleUtils",
    "target" : "procedure/PeopleUtils.calcCongestionRate"
  }, {
    "source" : "procedure/PeopleUtils.calcCongestionRate",
    "target" : "services/PeopleUtils"
  }, {
    "source" : "procedure/PeopleCountingCamera.countTotalPeople",
    "target" : "procedure/PeopleUtils.calcCongestionRate"
  }, {
    "source" : "procedure/Lidar.transformPositionEvent",
    "target" : "procedure/PeopleUtils.calcCongestionRate"
  }, {
    "source" : "procedure/Lidar.transformInoutEvent",
    "target" : "procedure/LogUtils.getMessageFormat"
  }, {
    "source" : "procedure/Lidar.transformInoutEvent",
    "target" : "procedure/LogUtils.logError"
  }, {
    "source" : "procedure/Lidar.transformInoutEvent",
    "target" : "procedure/PeopleUtils.calcCongestionRate"
  }, {
    "source" : "procedure/Lidar.transformInoutEvent",
    "target" : "services/Lidar"
  }, {
    "source" : "services/Lidar",
    "target" : "procedure/Lidar.transformInoutEvent"
  }, {
    "source" : "procedure/Lidar.transformInoutEvent",
    "target" : "type/lidar_inout_sensors"
  }, {
    "source" : "app/LidarEventHandler",
    "target" : "procedure/Lidar.transformInoutEvent"
  }, {
    "source" : "procedure/PublishUtils.publishProcessedData",
    "target" : "source/ProcessedDataMqtt"
  } ],
  "name" : "smart_building_quick_start_kit",
  "options" : {
    "description" : "",
    "dockCollapsed" : {
      "bottom" : true,
      "left" : false,
      "right" : false,
      "top" : false,
      "viewtabs" : false
    },
    "dockDimensions" : {
      "bottom" : 200,
      "debug" : [ 835.2785906502171, 931.721409349783 ],
      "left" : 343,
      "right" : 220,
      "top" : 0,
      "viewtabs" : 0
    },
    "exclusionList" : [ "procedure/AppUtils.updateAreasValue", "procedure/LogUtils.formatLog", "procedure/LogUtils.publishLog", "procedure/test", "procedure/testProc", "services/AnalogMeter", "services/Area", "services/EnvEventHandler", "services/IntrusionCamera", "services/Utils", "source/AiCamIntrusionEventMqttBroker", "source/AiCamIntrusionEventMqttBroker_Copy", "source/AiCamPeopleCountEventMqttBroker", "source/AiCamRegisteredPersonEventMqttBroker", "source/AiCamRegisteredPersonMqtt", "source/AmazonMQ_ImageAnalysisEvent", "source/AnalogTempEventMqttBroker", "source/AnalogTempMqtt", "source/EnvEventMqttBroker", "source/HitachiLidarInoutEventMqttBroker", "source/HldsInoutEventMqttBroker", "source/HldsInoutMqttBroker", "source/HldsPositionEventMqttBroker", "source/HldsPositionMqttBroker", "source/ImageAnalysisEventMqttBroker", "source/ImageAnalysisMqttBroker", "source/InoutCountEventMqttBroker", "source/IntrusionEventMqttBroker", "source/OmronEnvEventMqttBroker", "source/OmronEnvMqtt", "source/PeopleCountEventMqttBroker", "source/PeoplePositionEventMqttBroker", "source/RegisteredPersonEventMqttBroker", "source/TemperatureEventMqttBroker", "topic//test", "topic//test/info", "type/ai_cameras", "type/analog_status_indicators", "type/floor", "type/gas_readers", "type/inout_lidar_sensors", "type/intrusion_status", "type/machine_room_status", "type/position_lidar_sensors", "type/registrant_status", "type/temp_meters" ],
    "filterBitArray" : "ffffffffffffffffffffffffffffffff",
    "isModeloProject" : true,
    "layoutStyle" : "custom",
    "openFolders" : [ "rule", "app", "procedure", "source" ],
    "rootViewFlavor" : 1,
    "showGrid" : true,
    "type" : "dev",
    "v" : 4,
    "viewUUID" : "MAINVIEW"
  },
  "resources" : [ {
    "label" : "/apps.CameraEventHandler/SetAreaStatusTopic",
    "name" : "/apps.CameraEventHandler/SetAreaStatusTopic",
    "resourceReference" : "/topics//apps.CameraEventHandler/SetAreaStatusTopic",
    "type" : 10
  }, {
    "label" : "/apps.CameraEventHandler/debug",
    "name" : "/apps.CameraEventHandler/debug",
    "resourceReference" : "/topics//apps.CameraEventHandler/debug",
    "type" : 10
  }, {
    "label" : "/apps.EnvEventHandler/debug",
    "name" : "/apps.EnvEventHandler/debug",
    "resourceReference" : "/topics//apps.EnvEventHandler/debug",
    "type" : 10
  }, {
    "label" : "/internal/area_status",
    "name" : "/internal/area_status",
    "resourceReference" : "/topics//internal/area_status",
    "type" : 10
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "AnalogBoilerStatusMqtt",
    "name" : "AnalogBoilerStatusMqtt",
    "resourceReference" : "/sources/AnalogBoilerStatusMqtt",
    "timestamp" : "2021-10-20T06:18:37.810Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "AnalogGasMqtt",
    "name" : "AnalogGasMqtt",
    "resourceReference" : "/sources/AnalogGasMqtt",
    "timestamp" : "2021-10-26T02:03:29.589Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ "in", "in", "in" ],
      "sources" : [ "AnalogBoilerStatusMqtt", "AnalogGasMqtt", "AnalogVoltMqtt" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "AnalogMeterEventHandler",
    "name" : "AnalogMeterEventHandler",
    "resourceReference" : "/collaborationtypes/AnalogMeterEventHandler",
    "timestamp" : "2021-10-19T03:07:01.651Z",
    "type" : 12
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "AnalogTemperatureMqtt",
    "name" : "AnalogTemperatureMqtt",
    "resourceReference" : "/sources/AnalogTemperatureMqtt",
    "timestamp" : "2021-10-26T02:03:33.573Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "AnalogVoltMqtt",
    "name" : "AnalogVoltMqtt",
    "resourceReference" : "/sources/AnalogVoltMqtt",
    "timestamp" : "2021-10-26T02:03:37.652Z",
    "type" : 4
  }, {
    "label" : "AreaStatusHandler",
    "name" : "AreaStatusHandler",
    "resourceReference" : "/collaborationtypes/AreaStatusHandler",
    "timestamp" : "2021-10-22T01:53:32.161Z",
    "type" : 12
  }, {
    "label" : "BoilerStatusIndicator",
    "name" : "BoilerStatusIndicator",
    "resourceReference" : "/system.services/BoilerStatusIndicator",
    "timestamp" : "2021-10-18T05:23:03.917Z",
    "type" : 63
  }, {
    "label" : "BoilerStatusIndicator.transformStatusEvent",
    "name" : "BoilerStatusIndicator.transformStatusEvent",
    "procedureName" : "transformStatusEvent",
    "resourceReference" : "/procedures/BoilerStatusIndicator.transformStatusEvent",
    "serviceName" : "BoilerStatusIndicator",
    "timestamp" : "2021-10-18T05:36:45.780Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ "in", "in", "in" ],
      "sources" : [ "CameraIntrusionMqtt", "CameraPeopleCountMqtt", "CameraRegistrantMqtt" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "CameraEventHandler",
    "name" : "CameraEventHandler",
    "resourceReference" : "/collaborationtypes/CameraEventHandler",
    "timestamp" : "2021-10-22T06:58:42.127Z",
    "type" : 12
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "CameraIntrusionMqtt",
    "name" : "CameraIntrusionMqtt",
    "resourceReference" : "/sources/CameraIntrusionMqtt",
    "timestamp" : "2021-10-20T07:25:00.001Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "CameraPeopleCountMqtt",
    "name" : "CameraPeopleCountMqtt",
    "resourceReference" : "/sources/CameraPeopleCountMqtt",
    "timestamp" : "2021-10-21T00:42:20.922Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "CameraRegistrantMqtt",
    "name" : "CameraRegistrantMqtt",
    "resourceReference" : "/sources/CameraRegistrantMqtt",
    "timestamp" : "2021-10-22T05:09:59.601Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out", "out", "out" ],
      "procedures" : [ "EnvSensor.transformEnvEvent", "Area.notifyHighCo2", "Area.publishAreaStatus" ],
      "sourceHash" : [ "in" ],
      "sources" : [ "EnvMqtt" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ "out" ],
      "types" : [ "area_status" ]
    },
    "label" : "EnvEventHandler",
    "name" : "EnvEventHandler",
    "resourceReference" : "/collaborationtypes/EnvEventHandler",
    "timestamp" : "2021-10-22T01:54:47.664Z",
    "type" : 12
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "EnvMqtt",
    "name" : "EnvMqtt",
    "resourceReference" : "/sources/EnvMqtt",
    "timestamp" : "2021-10-21T05:16:56.541Z",
    "type" : 4
  }, {
    "label" : "EnvSensor",
    "name" : "EnvSensor",
    "resourceReference" : "/system.services/EnvSensor",
    "timestamp" : "2021-10-14T06:05:47.659Z",
    "type" : 63
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out", "out", "out", "out" ],
      "procedures" : [ "LogUtils.getMessageFormat", "format", "LogUtils.logError", "exception" ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ "in" ],
      "types" : [ "env_sensors" ]
    },
    "label" : "EnvSensor.transformEnvEvent",
    "name" : "EnvSensor.transformEnvEvent",
    "procedureName" : "transformEnvEvent",
    "resourceReference" : "/procedures/EnvSensor.transformEnvEvent",
    "serviceName" : "EnvSensor",
    "timestamp" : "2021-10-19T06:25:57.493Z",
    "type" : 3
  }, {
    "label" : "GasMeter",
    "name" : "GasMeter",
    "resourceReference" : "/system.services/GasMeter",
    "timestamp" : "2021-10-19T01:03:59.951Z",
    "type" : 63
  }, {
    "label" : "GasMeter.transformGasEvent",
    "name" : "GasMeter.transformGasEvent",
    "procedureName" : "transformGasEvent",
    "resourceReference" : "/procedures/GasMeter.transformGasEvent",
    "serviceName" : "GasMeter",
    "timestamp" : "2021-10-19T01:14:36.954Z",
    "type" : 3
  }, {
    "label" : "IntrusionDetectionCamera",
    "name" : "IntrusionDetectionCamera",
    "resourceReference" : "/system.services/IntrusionDetectionCamera",
    "timestamp" : "2021-10-20T09:01:19.716Z",
    "type" : 63
  }, {
    "label" : "IntrusionDetectionCamera.transformIntrusionEvent",
    "name" : "IntrusionDetectionCamera.transformIntrusionEvent",
    "procedureName" : "transformIntrusionEvent",
    "resourceReference" : "/procedures/IntrusionDetectionCamera.transformIntrusionEvent",
    "serviceName" : "IntrusionDetectionCamera",
    "timestamp" : "2021-10-20T09:01:19.807Z",
    "type" : 3
  }, {
    "label" : "Lidar",
    "name" : "Lidar",
    "resourceReference" : "/system.services/Lidar",
    "timestamp" : "2021-10-22T06:14:53.263Z",
    "type" : 63
  }, {
    "label" : "Lidar.transformInoutEvent",
    "name" : "Lidar.transformInoutEvent",
    "procedureName" : "transformInoutEvent",
    "resourceReference" : "/procedures/Lidar.transformInoutEvent",
    "serviceName" : "Lidar",
    "timestamp" : "2021-10-26T03:46:27.954Z",
    "type" : 3
  }, {
    "label" : "Lidar.transformPositionEvent",
    "name" : "Lidar.transformPositionEvent",
    "procedureName" : "transformPositionEvent",
    "resourceReference" : "/procedures/Lidar.transformPositionEvent",
    "serviceName" : "Lidar",
    "timestamp" : "2021-10-22T07:15:05.788Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ "in", "in" ],
      "sources" : [ "LidarInoutMqtt", "LidarPositionMqtt" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LidarEventHandler",
    "name" : "LidarEventHandler",
    "resourceReference" : "/collaborationtypes/LidarEventHandler",
    "timestamp" : "2021-10-22T07:44:12.821Z",
    "type" : 12
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LidarInoutMqtt",
    "name" : "LidarInoutMqtt",
    "resourceReference" : "/sources/LidarInoutMqtt",
    "timestamp" : "2021-10-22T05:54:29.192Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LidarPositionMqtt",
    "name" : "LidarPositionMqtt",
    "resourceReference" : "/sources/LidarPositionMqtt",
    "timestamp" : "2021-10-22T05:54:46.145Z",
    "type" : 4
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LogMqtt",
    "name" : "LogMqtt",
    "resourceReference" : "/sources/LogMqtt",
    "timestamp" : "2021-10-22T05:57:01.738Z",
    "type" : 4
  }, {
    "label" : "LogUtils",
    "name" : "LogUtils",
    "resourceReference" : "/system.services/LogUtils",
    "timestamp" : "2021-10-08T04:52:16.367Z",
    "type" : 63
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LogUtils.getMessageFormat",
    "name" : "LogUtils.getMessageFormat",
    "procedureName" : "getMessageFormat",
    "resourceReference" : "/procedures/LogUtils.getMessageFormat",
    "serviceName" : "LogUtils",
    "timestamp" : "2021-10-22T05:39:28.202Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out", "out" ],
      "procedures" : [ "stringify", "PublishUtils.publishLog" ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LogUtils.logCommon",
    "name" : "LogUtils.logCommon",
    "procedureName" : "logCommon",
    "resourceReference" : "/procedures/LogUtils.logCommon",
    "serviceName" : "LogUtils",
    "timestamp" : "2021-10-08T06:37:53.626Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out" ],
      "procedures" : [ "LogUtils.logCommon" ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LogUtils.logError",
    "name" : "LogUtils.logError",
    "procedureName" : "logError",
    "resourceReference" : "/procedures/LogUtils.logError",
    "serviceName" : "LogUtils",
    "timestamp" : "2021-10-08T05:46:25.432Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out" ],
      "procedures" : [ "LogUtils.logCommon" ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LogUtils.logInfo",
    "name" : "LogUtils.logInfo",
    "procedureName" : "logInfo",
    "resourceReference" : "/procedures/LogUtils.logInfo",
    "serviceName" : "LogUtils",
    "timestamp" : "2021-10-08T05:47:11.492Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out" ],
      "procedures" : [ "LogUtils.logCommon" ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "LogUtils.logWarn",
    "name" : "LogUtils.logWarn",
    "procedureName" : "logWarn",
    "resourceReference" : "/procedures/LogUtils.logWarn",
    "serviceName" : "LogUtils",
    "timestamp" : "2021-10-08T05:46:31.875Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "NotificationMqtt",
    "name" : "NotificationMqtt",
    "resourceReference" : "/sources/NotificationMqtt",
    "timestamp" : "2021-10-14T06:55:15.131Z",
    "type" : 4
  }, {
    "label" : "PeopleCountingCamera",
    "name" : "PeopleCountingCamera",
    "resourceReference" : "/system.services/PeopleCountingCamera",
    "timestamp" : "2021-10-21T02:13:45.087Z",
    "type" : 63
  }, {
    "label" : "PeopleCountingCamera.countTotalPeople",
    "name" : "PeopleCountingCamera.countTotalPeople",
    "procedureName" : "countTotalPeople",
    "resourceReference" : "/procedures/PeopleCountingCamera.countTotalPeople",
    "serviceName" : "PeopleCountingCamera",
    "timestamp" : "2021-10-22T07:09:56.643Z",
    "type" : 3
  }, {
    "label" : "PeopleCountingCamera.transformPeopleCountEvent",
    "name" : "PeopleCountingCamera.transformPeopleCountEvent",
    "procedureName" : "transformPeopleCountEvent",
    "resourceReference" : "/procedures/PeopleCountingCamera.transformPeopleCountEvent",
    "serviceName" : "PeopleCountingCamera",
    "timestamp" : "2021-10-21T02:31:28.975Z",
    "type" : 3
  }, {
    "label" : "PeopleUtils",
    "name" : "PeopleUtils",
    "resourceReference" : "/system.services/PeopleUtils",
    "timestamp" : "2021-10-22T07:09:32.032Z",
    "type" : 63
  }, {
    "label" : "PeopleUtils.calcCongestionRate",
    "name" : "PeopleUtils.calcCongestionRate",
    "procedureName" : "calcCongestionRate",
    "resourceReference" : "/procedures/PeopleUtils.calcCongestionRate",
    "serviceName" : "PeopleUtils",
    "timestamp" : "2021-10-22T07:09:32.130Z",
    "type" : 3
  }, {
    "label" : "ProcessedDataMqtt",
    "name" : "ProcessedDataMqtt",
    "resourceReference" : "/sources/ProcessedDataMqtt",
    "timestamp" : "2021-10-22T07:48:13.644Z",
    "type" : 4
  }, {
    "label" : "PublishUtils",
    "name" : "PublishUtils",
    "resourceReference" : "/system.services/PublishUtils",
    "timestamp" : "2021-10-08T06:13:21.857Z",
    "type" : 63
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out", "out", "out", "out" ],
      "procedures" : [ "conf", "LogUtils.getMessageFormat", "format", "exception" ],
      "sourceHash" : [ "out" ],
      "sources" : [ "LogMqtt" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "PublishUtils.publishLog",
    "name" : "PublishUtils.publishLog",
    "procedureName" : "publishLog",
    "resourceReference" : "/procedures/PublishUtils.publishLog",
    "serviceName" : "PublishUtils",
    "timestamp" : "2021-10-12T00:27:42.919Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out", "out", "out", "out" ],
      "procedures" : [ "LogUtils.getMessageFormat", "format", "LogUtils.logError", "exception" ],
      "sourceHash" : [ "out" ],
      "sources" : [ "NotificationMqtt" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "PublishUtils.publishNotification",
    "name" : "PublishUtils.publishNotification",
    "procedureName" : "publishNotification",
    "resourceReference" : "/procedures/PublishUtils.publishNotification",
    "serviceName" : "PublishUtils",
    "timestamp" : "2021-10-14T14:08:21.949Z",
    "type" : 3
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ "out", "out", "out", "out" ],
      "procedures" : [ "LogUtils.getMessageFormat", "format", "LogUtils.logError", "exception" ],
      "sourceHash" : [ "out" ],
      "sources" : [ "ProcessedDataAmqp" ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "PublishUtils.publishProcessedData",
    "name" : "PublishUtils.publishProcessedData",
    "procedureName" : "publishProcessedData",
    "resourceReference" : "/procedures/PublishUtils.publishProcessedData",
    "serviceName" : "PublishUtils",
    "timestamp" : "2021-10-22T07:57:06.617Z",
    "type" : 3
  }, {
    "label" : "RegistrantDetectionCamera",
    "name" : "RegistrantDetectionCamera",
    "resourceReference" : "/system.services/RegistrantDetectionCamera",
    "timestamp" : "2021-10-22T05:23:43.636Z",
    "type" : 63
  }, {
    "label" : "RegistrantDetectionCamera.findRegistrant",
    "name" : "RegistrantDetectionCamera.findRegistrant",
    "procedureName" : "findRegistrant",
    "resourceReference" : "/procedures/RegistrantDetectionCamera.findRegistrant",
    "serviceName" : "RegistrantDetectionCamera",
    "timestamp" : "2021-10-22T05:41:07.832Z",
    "type" : 3
  }, {
    "label" : "RegistrantDetectionCamera.transformRegistrantEvent",
    "name" : "RegistrantDetectionCamera.transformRegistrantEvent",
    "procedureName" : "transformRegistrantEvent",
    "resourceReference" : "/procedures/RegistrantDetectionCamera.transformRegistrantEvent",
    "serviceName" : "RegistrantDetectionCamera",
    "timestamp" : "2021-10-22T05:44:00.788Z",
    "type" : 3
  }, {
    "label" : "TemperatureMeter",
    "name" : "TemperatureMeter",
    "resourceReference" : "/system.services/TemperatureMeter",
    "timestamp" : "2021-10-18T01:46:21.389Z",
    "type" : 63
  }, {
    "label" : "TemperatureMeter.transformTempEvent",
    "name" : "TemperatureMeter.transformTempEvent",
    "procedureName" : "transformTempEvent",
    "resourceReference" : "/procedures/TemperatureMeter.transformTempEvent",
    "serviceName" : "TemperatureMeter",
    "timestamp" : "2021-10-18T02:27:11.269Z",
    "type" : 3
  }, {
    "label" : "VoltMeter",
    "name" : "VoltMeter",
    "resourceReference" : "/system.services/VoltMeter",
    "timestamp" : "2021-10-19T02:04:41.813Z",
    "type" : 63
  }, {
    "label" : "VoltMeter.transformVoltEvent",
    "name" : "VoltMeter.transformVoltEvent",
    "procedureName" : "transformVoltEvent",
    "resourceReference" : "/procedures/VoltMeter.transformVoltEvent",
    "serviceName" : "VoltMeter",
    "timestamp" : "2021-10-19T02:09:20.568Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetAbnormalBoilerTopic",
    "name" : "apps.AnalogMeterEventHandler.SetAbnormalBoilerTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetAbnormalBoilerTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetAbnormalBoilerTopic",
    "timestamp" : "2021-10-19T03:07:03.623Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetBoilerStatusTopic",
    "name" : "apps.AnalogMeterEventHandler.SetBoilerStatusTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetBoilerStatusTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetBoilerStatusTopic",
    "timestamp" : "2021-10-19T03:07:03.567Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetGasStatusTopic",
    "name" : "apps.AnalogMeterEventHandler.SetGasStatusTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetGasStatusTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetGasStatusTopic",
    "timestamp" : "2021-10-19T03:07:02.475Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetNotifyAbnormalBoilerTopic",
    "name" : "apps.AnalogMeterEventHandler.SetNotifyAbnormalBoilerTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetNotifyAbnormalBoilerTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetNotifyAbnormalBoilerTopic",
    "timestamp" : "2021-10-19T03:02:33.565Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetNotifyBoilerAbnormalityTopic",
    "name" : "apps.AnalogMeterEventHandler.SetNotifyBoilerAbnormalityTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetNotifyBoilerAbnormalityTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetNotifyBoilerAbnormalityTopic",
    "timestamp" : "2021-10-19T02:59:17.673Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetTempTopic",
    "name" : "apps.AnalogMeterEventHandler.SetTempTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetTempTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetTempTopic",
    "timestamp" : "2021-10-19T03:07:04.333Z",
    "type" : 3
  }, {
    "label" : "apps.AnalogMeterEventHandler.SetVoltStatusTopic",
    "name" : "apps.AnalogMeterEventHandler.SetVoltStatusTopic",
    "packageName" : "apps.AnalogMeterEventHandler",
    "procedureName" : "SetVoltStatusTopic",
    "resourceReference" : "/procedures/apps.AnalogMeterEventHandler.SetVoltStatusTopic",
    "timestamp" : "2021-10-19T03:07:02.462Z",
    "type" : 3
  }, {
    "label" : "apps.AreaStatusHandler.SetAreaStatusTopic",
    "name" : "apps.AreaStatusHandler.SetAreaStatusTopic",
    "packageName" : "apps.AreaStatusHandler",
    "procedureName" : "SetAreaStatusTopic",
    "resourceReference" : "/procedures/apps.AreaStatusHandler.SetAreaStatusTopic",
    "timestamp" : "2021-10-22T01:53:32.679Z",
    "type" : 3
  }, {
    "label" : "apps.AreaStatusHandler.SetHighCo2Topic",
    "name" : "apps.AreaStatusHandler.SetHighCo2Topic",
    "packageName" : "apps.AreaStatusHandler",
    "procedureName" : "SetHighCo2Topic",
    "resourceReference" : "/procedures/apps.AreaStatusHandler.SetHighCo2Topic",
    "timestamp" : "2021-10-22T01:53:32.704Z",
    "type" : 3
  }, {
    "label" : "apps.AreaStatusHandler.SetHighCongestionTopic",
    "name" : "apps.AreaStatusHandler.SetHighCongestionTopic",
    "packageName" : "apps.AreaStatusHandler",
    "procedureName" : "SetHighCongestionTopic",
    "resourceReference" : "/procedures/apps.AreaStatusHandler.SetHighCongestionTopic",
    "timestamp" : "2021-10-22T01:53:32.678Z",
    "type" : 3
  }, {
    "label" : "apps.CameraEventHandler.SetAreaStatusTopic",
    "name" : "apps.CameraEventHandler.SetAreaStatusTopic",
    "packageName" : "apps.CameraEventHandler",
    "procedureName" : "SetAreaStatusTopic",
    "resourceReference" : "/procedures/apps.CameraEventHandler.SetAreaStatusTopic",
    "timestamp" : "2021-10-21T05:31:04.626Z",
    "type" : 3
  }, {
    "label" : "apps.CameraEventHandler.SetHighCongestionTopic",
    "name" : "apps.CameraEventHandler.SetHighCongestionTopic",
    "packageName" : "apps.CameraEventHandler",
    "procedureName" : "SetHighCongestionTopic",
    "resourceReference" : "/procedures/apps.CameraEventHandler.SetHighCongestionTopic",
    "timestamp" : "2021-10-21T05:31:04.617Z",
    "type" : 3
  }, {
    "label" : "apps.CameraEventHandler.SetIntrusionTopic",
    "name" : "apps.CameraEventHandler.SetIntrusionTopic",
    "packageName" : "apps.CameraEventHandler",
    "procedureName" : "SetIntrusionTopic",
    "resourceReference" : "/procedures/apps.CameraEventHandler.SetIntrusionTopic",
    "timestamp" : "2021-10-22T06:58:44.772Z",
    "type" : 3
  }, {
    "label" : "apps.CameraEventHandler.SetRegistrantTopic",
    "name" : "apps.CameraEventHandler.SetRegistrantTopic",
    "packageName" : "apps.CameraEventHandler",
    "procedureName" : "SetRegistrantTopic",
    "resourceReference" : "/procedures/apps.CameraEventHandler.SetRegistrantTopic",
    "timestamp" : "2021-10-22T06:58:42.588Z",
    "type" : 3
  }, {
    "label" : "apps.EnvEventHandler.SetAreaStatusTopic",
    "name" : "apps.EnvEventHandler.SetAreaStatusTopic",
    "packageName" : "apps.EnvEventHandler",
    "procedureName" : "SetAreaStatusTopic",
    "resourceReference" : "/procedures/apps.EnvEventHandler.SetAreaStatusTopic",
    "timestamp" : "2021-10-21T04:22:08.741Z",
    "type" : 3
  }, {
    "label" : "apps.EnvEventHandler.SetEnvAreaStatusTopic",
    "name" : "apps.EnvEventHandler.SetEnvAreaStatusTopic",
    "packageName" : "apps.EnvEventHandler",
    "procedureName" : "SetEnvAreaStatusTopic",
    "resourceReference" : "/procedures/apps.EnvEventHandler.SetEnvAreaStatusTopic",
    "timestamp" : "2021-10-21T05:30:48.849Z",
    "type" : 3
  }, {
    "label" : "apps.EnvEventHandler.SetHighCo2Topic",
    "name" : "apps.EnvEventHandler.SetHighCo2Topic",
    "packageName" : "apps.EnvEventHandler",
    "procedureName" : "SetHighCo2Topic",
    "resourceReference" : "/procedures/apps.EnvEventHandler.SetHighCo2Topic",
    "timestamp" : "2021-10-21T05:30:48.848Z",
    "type" : 3
  }, {
    "label" : "apps.EnvEventHandler.SetNotifyHighCo2Topic",
    "name" : "apps.EnvEventHandler.SetNotifyHighCo2Topic",
    "packageName" : "apps.EnvEventHandler",
    "procedureName" : "SetNotifyHighCo2Topic",
    "resourceReference" : "/procedures/apps.EnvEventHandler.SetNotifyHighCo2Topic",
    "timestamp" : "2021-10-21T04:20:24.386Z",
    "type" : 3
  }, {
    "label" : "apps.services.AnalogMeterEventHandler",
    "name" : "apps.services.AnalogMeterEventHandler",
    "resourceReference" : "/system.services/apps.services.AnalogMeterEventHandler",
    "timestamp" : "2021-10-19T03:07:04.044Z",
    "type" : 63
  }, {
    "label" : "apps.services.AreaStatusHandler",
    "name" : "apps.services.AreaStatusHandler",
    "resourceReference" : "/system.services/apps.services.AreaStatusHandler",
    "timestamp" : "2021-10-22T01:53:32.652Z",
    "type" : 63
  }, {
    "label" : "apps.services.CameraEventHandler",
    "name" : "apps.services.CameraEventHandler",
    "resourceReference" : "/system.services/apps.services.CameraEventHandler",
    "timestamp" : "2021-10-22T06:58:43.951Z",
    "type" : 63
  }, {
    "label" : "apps.services.EnvEventHandler",
    "name" : "apps.services.EnvEventHandler",
    "resourceReference" : "/system.services/apps.services.EnvEventHandler",
    "timestamp" : "2021-10-22T01:54:47.961Z",
    "type" : 63
  }, {
    "label" : "apps.services.LidarEventHandler",
    "name" : "apps.services.LidarEventHandler",
    "resourceReference" : "/system.services/apps.services.LidarEventHandler",
    "timestamp" : "2021-10-22T07:44:13.377Z",
    "type" : 63
  }, {
    "label" : "area_status",
    "name" : "area_status",
    "resourceReference" : "/types/area_status",
    "timestamp" : "2021-10-14T06:24:52.634Z",
    "type" : 1
  }, {
    "label" : "boiler_status_indicator_status",
    "name" : "boiler_status_indicator_status",
    "resourceReference" : "/types/boiler_status_indicator_status",
    "timestamp" : "2021-10-14T08:46:21.186Z",
    "type" : 1
  }, {
    "label" : "boiler_status_indicators",
    "name" : "boiler_status_indicators",
    "resourceReference" : "/types/boiler_status_indicators",
    "timestamp" : "2021-10-14T07:51:54.550Z",
    "type" : 1
  }, {
    "inventory" : {
      "clientHash" : [ ],
      "clients" : [ ],
      "collaborationHash" : [ ],
      "collaborations" : [ ],
      "eventstreamHash" : [ ],
      "eventstreams" : [ ],
      "procedureHash" : [ ],
      "procedures" : [ ],
      "sourceHash" : [ ],
      "sources" : [ ],
      "systemmodelHash" : [ ],
      "systemmodels" : [ ],
      "topicHash" : [ ],
      "topics" : [ ],
      "typeHash" : [ ],
      "types" : [ ]
    },
    "label" : "conf",
    "name" : "conf",
    "procedureName" : "conf",
    "resourceReference" : "/procedures/conf",
    "timestamp" : "2021-10-21T05:19:03.881Z",
    "type" : 3
  }, {
    "label" : "env_sensors",
    "name" : "env_sensors",
    "resourceReference" : "/types/env_sensors",
    "timestamp" : "2021-10-14T01:28:58.084Z",
    "type" : 1
  }, {
    "label" : "gas_meter_status",
    "name" : "gas_meter_status",
    "resourceReference" : "/types/gas_meter_status",
    "timestamp" : "2021-10-14T08:47:19.051Z",
    "type" : 1
  }, {
    "label" : "gas_meters",
    "name" : "gas_meters",
    "resourceReference" : "/types/gas_meters",
    "timestamp" : "2021-10-14T07:51:59.947Z",
    "type" : 1
  }, {
    "label" : "intrusion_detection_camera_status",
    "name" : "intrusion_detection_camera_status",
    "resourceReference" : "/types/intrusion_detection_camera_status",
    "timestamp" : "2021-10-20T09:00:14.751Z",
    "type" : 1
  }, {
    "label" : "intrusion_detection_cameras",
    "name" : "intrusion_detection_cameras",
    "resourceReference" : "/types/intrusion_detection_cameras",
    "timestamp" : "2021-10-14T01:24:30.741Z",
    "type" : 1
  }, {
    "label" : "lidar_inout_sensors",
    "name" : "lidar_inout_sensors",
    "resourceReference" : "/types/lidar_inout_sensors",
    "timestamp" : "2021-10-14T01:27:00.240Z",
    "type" : 1
  }, {
    "label" : "lidar_position_sensors",
    "name" : "lidar_position_sensors",
    "resourceReference" : "/types/lidar_position_sensors",
    "timestamp" : "2021-10-22T06:47:58.762Z",
    "type" : 1
  }, {
    "label" : "people_counting_cameras",
    "name" : "people_counting_cameras",
    "resourceReference" : "/types/people_counting_cameras",
    "timestamp" : "2021-10-13T08:41:41.228Z",
    "type" : 1
  }, {
    "label" : "registrant_detection_camera_status",
    "name" : "registrant_detection_camera_status",
    "resourceReference" : "/types/registrant_detection_camera_status",
    "timestamp" : "2021-10-22T05:52:07.352Z",
    "type" : 1
  }, {
    "label" : "registrant_detection_cameras",
    "name" : "registrant_detection_cameras",
    "resourceReference" : "/types/registrant_detection_cameras",
    "timestamp" : "2021-10-14T01:24:45.967Z",
    "type" : 1
  }, {
    "label" : "registrants",
    "name" : "registrants",
    "resourceReference" : "/types/registrants",
    "timestamp" : "2021-10-22T05:22:12.721Z",
    "type" : 1
  }, {
    "label" : "system.sources",
    "name" : "system.sources",
    "resourceReference" : "/types/system.sources",
    "timestamp" : "2021-05-08T18:18:26.478Z",
    "type" : 1
  }, {
    "label" : "temperature_meter_status",
    "name" : "temperature_meter_status",
    "resourceReference" : "/types/temperature_meter_status",
    "timestamp" : "2021-10-14T08:48:05.199Z",
    "type" : 1
  }, {
    "label" : "temperature_meters",
    "name" : "temperature_meters",
    "resourceReference" : "/types/temperature_meters",
    "timestamp" : "2021-10-14T07:52:09.591Z",
    "type" : 1
  }, {
    "label" : "volt_meter_status",
    "name" : "volt_meter_status",
    "resourceReference" : "/types/volt_meter_status",
    "timestamp" : "2021-10-19T02:01:20.286Z",
    "type" : 1
  }, {
    "label" : "volt_meters",
    "name" : "volt_meters",
    "resourceReference" : "/types/volt_meters",
    "timestamp" : "2021-10-19T02:02:11.658Z",
    "type" : 1
  } ],
  "tools" : [ {
    "isPinned" : false,
    "name" : "Project Contents",
    "type" : 2
  }, {
    "isPinned" : false,
    "name" : "エラー",
    "type" : 13
  }, {
    "isPinned" : false,
    "name" : "ログメッセージ",
    "type" : 12
  }, {
    "dockLocation" : "top",
    "isPinned" : false,
    "name" : "非アクティブ ペイン",
    "type" : 99
  } ],
  "type" : "dev",
  "views" : [ {
    "name" : "Project Contents",
    "projectToolKeys" : [ "list/Project Contents", "errorviewer/エラー", "logviewer/ログメッセージ", "tiledock/非アクティブ ペイン" ]
  } ]
}